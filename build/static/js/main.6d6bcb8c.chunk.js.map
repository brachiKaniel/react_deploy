{"version":3,"sources":["Components/Gantt/gantt.js","Components/Header/header.js","Components/Gantt/displayGantt.js","Components/routing/routing.js","App.js","reportWebVitals.js","index.js"],"names":["Gantt","props","dataProcessor","initZoom","gantt","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","onDataUpdated","this","createDataProcessor","type","action","item","id","Promise","resolve","reject","nextProps","attachEvent","task","priority","config","xml_date","tasks","ganttContainer","initGanttDataProcessor","parse","destructor","setZoom","ref","input","style","width","height","Component","withRouter","allProjects","workspaces","projects","console","log","arr","map","index","className","data-toggle","aria-haspopup","aria-expanded","project","backgroundColor","color","onClick","projectName","history","push","DisplayGantt","allWorkspace","allTheWorkspaces","theCards","theTasks","mone","cards","numOfTasks","currDate","minYear","maxYear","year","start_date","split","concat","parseInt","toString","data","links","source","target","currentZoom","text","message","addMessage","Routing","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d6bcb8c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { gantt } from 'dhtmlx-gantt';\r\n// import './gantt.css'\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\nimport '../Gantt/gantt.css'\r\n\r\nexport default class Gantt extends Component {\r\n\r\n    constructor(props) {\r\n        debugger\r\n        super(props);\r\n        this.initZoom();\r\n    }\r\n\r\n    // instance of gantt.dataProcessor\r\n    dataProcessor = null;\r\n\r\n    initZoom() {\r\n        gantt.ext.zoom.init({\r\n            levels: [\r\n                {\r\n                    name: 'Hours',\r\n                    scale_height: 60,\r\n                    min_column_width: 30,\r\n                    scales: [\r\n                        { unit: 'day', step: 1, format: '%d %M' },\r\n                        { unit: 'hour', step: 1, format: '%H' }\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'Days',\r\n                    scale_height: 60,\r\n                    min_column_width: 70,\r\n                    scales: [\r\n\r\n                        { unit: \"month\", step: 1, format: \"%F, %Y\" },\r\n                        { unit: \"day\", step: 1, format: \"%j, %D\" }\r\n                        // { unit: 'month', step: 1, format: 'month #%W' },\r\n                        // { unit: 'week', step: 1, format: 'Week #%W' },\r\n                        // { unit: 'day', step: 1, format: '%d %M' }\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'Months',\r\n                    scale_height: 60,\r\n                    min_column_width: 70,\r\n                    scales: [\r\n                        { unit: \"month\", step: 1, format: '%F' },\r\n                        { unit: 'week', step: 1, format: '#%W' }\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    setZoom(value) {\r\n        gantt.ext.zoom.setLevel(value);\r\n    }\r\n\r\n    initGanttDataProcessor() {\r\n        /**\r\n         * type: \"task\"|\"link\"\r\n         * action: \"create\"|\"update\"|\"delete\"\r\n         * item: data object object\r\n         */\r\n        const onDataUpdated = this.props.onDataUpdated;\r\n        this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\r\n            return new Promise((resolve, reject) => {\r\n                if (onDataUpdated) {\r\n                    onDataUpdated(type, action, item, id);\r\n                }\r\n\r\n                // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\r\n                // resolve({id: databaseId});\r\n                return resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return this.props.zoom !== nextProps.zoom;\r\n    }\r\n\r\n    componentDidMount() {\r\n        gantt.attachEvent(\"onBeforeTaskDisplay\", function (id, task) {\r\n            if (task.priority == \"high\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n        const { tasks } = this.props;\r\n        gantt.init(this.ganttContainer);\r\n        this.initGanttDataProcessor();\r\n        gantt.parse(tasks);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.dataProcessor) {\r\n            this.dataProcessor.destructor();\r\n            this.dataProcessor = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { zoom } = this.props;\r\n        this.setZoom(zoom);\r\n        return (\r\n            <div\r\n                ref={(input) => { this.ganttContainer = input }}\r\n                style={{ width: '100%', height: '100%' }}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n\r\n","import { react, useEffect, useState } from 'react';\r\nimport './header.css'\r\nimport workspaces from '../Gantt/workspace.json'\r\n// import Gantt from '../Gantt/gantt'\r\n// import DisplayGantt from '../Gantt/displayGantt'\r\nimport { Route, Router, withRouter } from \"react-router-dom\";\r\nimport Switch from 'react-bootstrap/esm/Switch';\r\n// import useState from 'react-dom'\r\nfunction Header(props) {\r\n\r\n  // const [projectName, setProjectName] = useState(true);\r\n  const allWorkspace = { workspaces };\r\n  const allProjects = allWorkspace.workspaces.workspaces.projects;\r\n  const routeToGantt = (projectName) => {\r\n    props.history.push(`/Gantt/${projectName}`);\r\n  }\r\n  const l = \"myName\";\r\n  // const colorCircle=allProjects.workspaces.workspaces.projects\r\n  console.log(allProjects);\r\n  const arr = []\r\n  allProjects.map((item, index) => {\r\n    arr[index] = item.name;\r\n  })\r\n  console.log(arr);\r\n\r\n  function goToGantt() {\r\n    // <Redirect to={'/Gantt'}></Redirect>\r\n    props.history.push('/Gantt/');\r\n    // history.push('/Gantt')\r\n    alert(\"camr\")\r\n  }\r\n \r\n  //const numbers = props.numbers;\r\n  // const listItemsProjectName = arr.map((number) =>\r\n  //   // <li>{number}</li>\r\n  //   <li>{number}</li>\r\n\r\n  // )\r\n\r\n\r\n\r\n\r\n  // function greetUser(e) {\r\n  //   debugger\r\n  //   console.log( e+  \"Hi there, user!\");\r\n  // }\r\n\r\n  // const  handleClick = value => () => {\r\n  //     console.log(value.name);\r\n  //     debugger\r\n  //    // history.push(`/Gantt/${value.name}`) ;\r\n  //     return \r\n  //     // <Redirect to='/Gantt/' />\r\n  //     <Redirect to={\"/Gantt/\" + value.name} />\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <div className=\"container \">\r\n        <div className=\"row  header2\">\r\n\r\n        </div>\r\n\r\n        <div className=\"row header1\">\r\n          <div className=\"col-3\">\r\n            <div className=\"btn-group\">\r\n\r\n              <div className=\"dropBtn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Projects\r\n                   </div>\r\n\r\n              <div className=\"   dropContainer dropdown-menu dropdown-menu-right container \">\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n\r\n                  </div>\r\n\r\n                  {allProjects.map((project) =>\r\n\r\n                    <div className=\" row mt-2\"\r\n\r\n                    >\r\n                      <div className=\"col-1  itemCircle ml-3\" style={{ backgroundColor: project.color ? project.color : \"blue\" }}>   {project.name[0]} </div>\r\n                      <div className=\"col-1 \">\r\n\r\n\r\n                        {/* <Router>\r\n                          <nav >\r\n                            <Switch>\r\n                              <Route path=\"/Gantt/:projectName\">\r\n                                <Gantt />\r\n                              </Route>\r\n                            </Switch> */}\r\n\r\n                        <button onClick={() => routeToGantt(project.name)} className=\" dropdown-item dropItem \"\r\n\r\n                        >\r\n\r\n                          {/* <Link to={`/Gantt/${project.name}`}> */}\r\n                          {project.name}\r\n                          {/* </Link> */}\r\n                        </button>\r\n\r\n\r\n\r\n\r\n                        {/* </nav>\r\n                        </Router> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      </div>\r\n\r\n\r\n\r\n                      {/* </> */}\r\n                    </div>\r\n\r\n\r\n                    // <li>{number}</li>\r\n                  )\r\n\r\n\r\n                  }\r\n\r\n\r\n                  <div className=\"col-8\">\r\n\r\n                  </div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n\r\n                  </div>\r\n\r\n                  {/* <div className=\"col-8\">\r\n                    <button className=\" dropdown-item dropItem \" type=\"button\">Action2</button>\r\n                  </div> */}\r\n\r\n                </div>\r\n                {/* <button className=\"dropdown-item dropItem\" type=\"button\">Another action</button>\r\n                     <button className=\"dropdown-item dropItem\" type=\"button\">Something else here</button> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3\">\r\n\r\n          </div> <div className=\"col-3\">\r\n\r\n          </div>\r\n          <div className=\"col-3 gantt\">\r\n            Gantt\r\n    </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\nexport default withRouter(Header)","import React, { Component } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Routing from '../routing/routing';\r\nimport Gantt from './gantt';\r\nimport workspaces from './workspace.json'\r\n\r\nexport default function DisplayGantt() {\r\n    debugger\r\n    const projectName = \"project1\";\r\n    console.log(projectName);\r\n    const allWorkspace = { workspaces };\r\n    console.log(allWorkspace);\r\n    const allTheWorkspaces = allWorkspace.workspaces.workspaces.projects;\r\n\r\n    const theCards = []\r\n    const theTasks = []\r\n    const mone = []\r\n\r\n    allTheWorkspaces.map((item, index) => {\r\n        {\r\n            item.name === projectName ? item.cards.map((item, index) => {\r\n                { theCards.push(item); }\r\n            })\r\n                : console.log(\"bed\", item.cards);\r\n        }\r\n    })\r\n    console.log(\"the cards\", theCards);\r\n\r\n    {\r\n        theCards ? theCards.map((item, index) => {\r\n            let numOfTasks = 0;\r\n            // theTasks.push(item.tasks)\r\n            item.tasks.map((item) => {\r\n                numOfTasks++;\r\n                console.log(\"oooooooppppppp\", item);\r\n                theTasks.push(item)\r\n            })\r\n            mone.push(numOfTasks)\r\n        }) : theTasks.push(null)\r\n\r\n    }\r\n    console.log(\"mone\", mone);\r\n    let minYear = \"3000-01-01\";\r\n    let maxYear = \"1000-01-01\";\r\n    let currDate;\r\n\r\n    debugger\r\n\r\n    {\r\n        theTasks.map((item) => {\r\n            let year = item.start_date.split('-')[0];\r\n            if (year > maxYear.split('-')[0]) {\r\n                debugger\r\n                currDate = year\r\n                console.log(\"papapap\", year);\r\n                year = year.concat('-01-01')\r\n                console.log(\"tttt\", year);\r\n                maxYear = year;\r\n            } else if (year < minYear) {\r\n                minYear = year\r\n            }\r\n            else {\r\n                return\r\n            }\r\n\r\n\r\n        })\r\n        console.log(\"min\", minYear);\r\n        console.log(\"max\", maxYear);\r\n    }\r\n    currDate = parseInt(currDate)\r\n    currDate = currDate + 2\r\n    currDate = currDate.toString();\r\n    console.log(\"papapap\", currDate);\r\n    currDate = currDate.concat('-01-01')\r\n    console.log(\"tttt\", currDate);\r\n    maxYear = currDate;\r\n    console.log();\r\n    theTasks.push(\r\n\r\n        {\r\n            \"id\": 2985730,\r\n            \"text\": \"first\",\r\n            \"start_date\": currDate,\r\n            \"duration\": 3,\r\n            \"progress\": 0.6,\r\n        })\r\n\r\n\r\n    console.log(\"the tasks\", theTasks);\r\n\r\n    const state = {\r\n        currentZoom: 'Days',\r\n        messages: []\r\n    };\r\n    const data = {\r\n        data: theTasks,\r\n        // data: [\r\n\r\n        // { id: 1, text: 'Task #1', start_date: \"'1000-02-12'\", duration: 0, progress: 0 },\r\n        // { id: 2, text: 'Task #2', start_date: '2020-02-12', duration: 3, progress: 0.6, priority: \"high\" },\r\n        // { id: 3, text: 'Task #3', start_date: '2020-04-16', duration: 3, progress: 0.4, priority: \"high\" },\r\n        // { id: 4, text: 'Task #4', start_date: '2100-04-16', duration: 1, progress: 1 }\r\n        // ],\r\n\r\n        links: [\r\n            { id: 1, source: 1, target: 2, type: '0' }\r\n        ]\r\n    };\r\n\r\n    // addMessage(message) {\r\n    //     const maxLogLength = 5;\r\n    //     const newMessate = { message };\r\n    //     const messages = [\r\n    //         newMessate,\r\n    //         ...this.state.messages\r\n    //     ];\r\n\r\n    //     if (messages.length > maxLogLength) {\r\n    //         messages.length = maxLogLength;\r\n    //     }\r\n    //     this.setState({ messages });\r\n    // }\r\n\r\n    const logDataUpdate = (type, action, item, id) => {\r\n        let text = item && item.text ? ` (${item.text})` : '';\r\n        let message = `${type} ${action}: ${id} ${text}`;\r\n        if (type === 'link' && action !== 'delete') {\r\n            message += ` ( source: ${item.source}, target: ${item.target} )`;\r\n        }\r\n        this.addMessage(message);\r\n    }\r\n\r\n    const handleZoomChange = (zoom) => {\r\n        this.setState({\r\n            currentZoom: zoom\r\n        });\r\n    }\r\n\r\n\r\n    const { currentZoom, messages } = state;\r\n    return (\r\n        <div>\r\n            <div className=\"zoom-bar\">\r\n                {/* <Toolbar\r\n            zoom={currentZoom}\r\n            onZoomChange={this.handleZoomChange}\r\n          /> */}\r\n            </div>\r\n            <div className=\"gantt-container\">\r\n                <Gantt\r\n                    tasks={data}\r\n                    zoom={currentZoom}\r\n                    onDataUpdated={logDataUpdate}\r\n                />\r\n            </div>\r\n            {/* <MessageArea\r\n          messages={messages}\r\n        /> */}\r\n        </div>\r\n    );\r\n\r\n}\r\n","import { react, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter, useParams, Redirect, useHistory } from \"react-router-dom\";\r\nimport Header from '../Header/header';\r\n// import Gantt from '../Gantt/gantt';\r\nimport DisplayGantt from '../Gantt/displayGantt';\r\n// import { createBrowserHistory } from 'history';\r\n// export const history = createBrowserHistory({ forceRefresh: true });\r\n\r\nimport { Provider } from 'react-redux'\r\nexport default function Routing() {\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Router>\r\n                <Header></Header>\r\n                <Switch>\r\n                    <Route path='/DisplayGantt/:projectName'>\r\n                        <DisplayGantt />\r\n                    </Route>\r\n                </Switch>\r\n\r\n            </Router>\r\n        </>\r\n\r\n    );\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Gantt from './Components/Gantt/gantt';\r\nimport './App.css';\r\nimport Routing from './Components/routing/routing';\r\nimport { Router, Switch, Route } from 'react-router-dom'\r\nimport Header from './Components/Header/header'\r\nimport DisplayGantt from './Components/Gantt/displayGantt';\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Routing></Routing>\r\n            <DisplayGantt></DisplayGantt>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}